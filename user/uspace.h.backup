#include <map>

#include <common.h>

#include "snode.pb.h"

extern const char * gbl_temp_dnode_path;

using std::map;
using std::string;
class snode;

class SuperNode {
    snode * proto;
    static map<string, SuperNode *> * objs;

private:
    SuperNode(){};

public:
    static SuperNode * add_cell(char * cell, char * fpath);
    static SuperNode * get_snode(char * cell);

    /**
     * A directory to be surveilled
     * @param dir is the directory to surveil
     * @return false if the entry exists
     */
    bool add_dir(const char * dir);

    /**
     * Remove a directory from the watchlist
     * @param dir is the path to the directory
     * @return true on success
     */
    bool rm_dir(const char * dir);
};
